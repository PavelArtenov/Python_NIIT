'''
Задания. Лекция 5.
Часто программисту дают задачу. И все, что ему нужно сделать, это найти в документации готовую функцию, 
которая реализует необходимое решение. Поэтому в первом задании Вам предстоит самостоятельно изучить 
документацию библиотеки itertools (это набор готовых итераторов), чтобы подобрать те функции, 
которая даст правильный ответ на следующие вопросы (иногда вы должны добавить свои аргументы 
при вызове функций помимо тех, что указаны в задании):
Функция должна принимать три массива ([1, 2, 3], [4, 5], [6, 7]), а вернуть лишь один массив 
([1, 2, 3, 4, 5, 6, 7])
Функция принимает массив (['hello', 'i', 'write', 'cool', 'code']) и возвращать массив из элементов, 
у которых длина не меньше пяти (['hello', 'world'])
Функция выдает на строку 'password' все возможные комбинации вида 
([('p', 'a', 's', 's'), ('p', 'a', 's', 'w'), ('p', 'a', 's', 'o'), ...)
Вы должны написать код, который использует указанные входные данные и вывести на экран возвращаемое значение. 
Помните, что ф-ии могут возвращать генератор, который нужно "развернуть" для вывода на экран.
'''

import itertools


# Функция должна принимать три массив ([1,2,3],[4,5],[6,7]), а вернуть лишь один массив ([1,2,3,4,5,6,7])
def combining(arr1, arr2, arr3):
    return list(itertools.chain(arr1, arr2, arr3))  # метод chain объединяет последовательности


print(combining([1, 2, 3], [4, 5], [6, 7]))


# Функция принимает массив(['hello','i','write','cool','code']) и возвращает массив из элементов,
# у которых длина не меньше 5 ('hello','world')
def count_ch(arr):
    return (list(itertools.filterfalse(lambda x: len(x) < 5, arr)))


print(count_ch(['hello', 'i', 'write', 'cool', 'code']))


# Функция выдает на строку 'password' все возможные комбинации
# вида ([('p', 'a', 's', 's'), ('p', 'a', 's', 'w'), ('p', 'a', 's', 'o'), ...)
def combinations(arr):
    return (list(itertools.combinations(arr, 4)))


print(combinations("password"))
